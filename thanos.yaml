---
apiVersion: v1
kind: Service
metadata:
  name: thanos-query
  namespace: monitoring
spec:
  ports:
  - name: grpc
    port: 10901
    targetPort: 10901
  - name: http
    port: 9090
    targetPort: 9090
  selector:
    name: thanos-query
  type: ClusterIP
---
apiVersion: v1
data:
  thanos.yaml: |
    http_server_config:
      http2: true
    basic_auth_users:
      admin: $2b$12$88tGkh5OLBCuca7y5EOHcuu5kHTVorolvUmk2vj6ObZPZxTdmC7Hu
kind: ConfigMap
metadata:
  name: thanos-config
  namespace: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query
  namespace: monitoring
  labels:
    name: thanos-query
spec:
  replicas: 3
  selector:
    matchLabels:
      name: thanos-query
  template:
    metadata:
      labels:
        name: thanos-query
    spec:
      containers:
      - name: thanos-query
        image: harbor.zhianoa.com/app/thanos:v0.23.1
        imagePullPolicy: IfNotPresent
        args:
        - query
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:9090
        - --query.auto-downsampling
        - --query.replica-label=prometheus_replica
        - --query.replica-label=rule_replica
        - --query.replica-label=region
        - --query.replica-label=room
        - --query.partial-response
        - --http.config=/etc/thanos/thanos.yaml
        - --store=dnssrv+_grpc._tcp.edge-prometheus-k8s.monitoring.svc.cluster.local
        - --store=dnssrv+_grpc._tcp.prometheus-k8s.monitoring.svc.cluster.local
        - --store=dnssrv+_grpc._tcp.thanos-rule.monitoring.svc.cluster.local
        - --store=dnssrv+_grpc._tcp.thanos-store.monitoring.svc.cluster.local
        livenessProbe:
          httpGet:
            port: 9090
            path: /-/healthy
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46MjFvcHMuY29tb3Bzb3Bzb3Bz
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            port: 9090
            path: /-/ready
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46MjFvcHMuY29tb3Bzb3Bzb3Bz
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
        - mountPath: /etc/thanos/thanos.yaml
          name: thanos-config
          subPath: thanos.yaml
      volumes:
      - configMap:
          defaultMode: 420
          name: thanos-config
        name: thanos-config
      - hostPath:
          path: /etc/localtime
        name: localtime
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-store
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: grpc
    port: 10901
    targetPort: 10901
  - name: http
    port: 10902
    targetPort: 10902
  selector:
    name: thanos-store
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-store
  namespace: monitoring
  labels:
    name: thanos-store
spec:
  serviceName: thanos-store
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      name: thanos-store
  template:
    metadata:
      labels:
        name: thanos-store
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - thanos-store
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: thanos-store
        image: harbor.zhianoa.com/app/thanos:v0.23.1
        imagePullPolicy: IfNotPresent
        args:
        - store
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --data-dir=/var/lib/store
        - --objstore.config-file=/etc/thanos/s3.yaml
        - --http.config=/etc/thanos/thanos.yaml
        livenessProbe:
          httpGet:
            port: 10902
            path: /-/healthy
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46MjFvcHMuY29tb3Bzb3Bzb3Bz 
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            port: 10902
            path: /-/ready
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46MjFvcHMuY29tb3Bzb3Bzb3Bz
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
        - mountPath: /etc/thanos/thanos.yaml
          name: thanos-config
          subPath: thanos.yaml
        - name: s3cfgcm
          subPath: s3.yaml
          mountPath: /etc/thanos/s3.yaml
        - mountPath: /var/lib/store
          name: thanos-store-data
      volumes:
      - configMap:
          defaultMode: 420
          name: thanos-config
        name: thanos-config
      - configMap:
          defaultMode: 420
          name: thanoss3config
          items:
          - key: s3config
            path: s3.yaml
        name: s3cfgcm
      - hostPath:
          path: /etc/localtime
        name: localtime
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: thanos-store-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
      storageClassName: csi-rbd-sc
      volumeMode: Filesystem
---
apiVersion: v1
data:
  query-config.yaml: |+
    - http_config:
        basic_auth:
          username: "admin"
          password: "21ops.comopsopsops"
      static_configs: ["thanos-query:9090"]
      scheme: http

kind: ConfigMap
metadata:
  name: thanos-query-config
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-rule
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: grpc
    port: 10901
    targetPort: 10901
  - name: http
    port: 10902
    targetPort: 10902
  selector:
    name: thanos-rule
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-rule
  namespace: monitoring
  labels:
    name: thanos-rule
spec:
  serviceName: thanos-rule
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      name: thanos-rule
  template:
    metadata:
      labels:
        name: thanos-rule
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - thanos-rule
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: thanos-rule
        image: harbor.zhianoa.com/app/thanos:v0.23.1
        imagePullPolicy: IfNotPresent
        args:
        - rule
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --data-dir=/var/lib/rule
        - --objstore.config-file=/etc/thanos/s3.yaml
        - --http.config=/etc/thanos/thanos.yaml
        - --label=rule_replicas="$(POD_NAME)"
        - --alert.label-drop=rule_replicas
        - --alertmanagers.url=http://alertmanager-main:9093/
        - --rule-file=/etc/thanos/rules/*yaml
        - --query.config-file=/etc/thanos/query-config.yaml
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        livenessProbe:
          httpGet:
            port: 10902
            path: /-/healthy
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46MjFvcHMuY29tb3Bzb3Bzb3Bz
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            port: 10902
            path: /-/ready
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46MjFvcHMuY29tb3Bzb3Bzb3Bz
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
        - mountPath: /etc/thanos/thanos.yaml
          name: thanos-config
          subPath: thanos.yaml
        - name: s3cfgcm
          subPath: s3.yaml
          mountPath: /etc/thanos/s3.yaml
        - name: thanos-query-config
          subPath: query-config.yaml
          mountPath: /etc/thanos/query-config.yaml
        - mountPath: /var/lib/rule
          name: thanos-rule-data
        - mountPath: /etc/thanos/rules
          name: prometheus-rules
      volumes:
      - configMap:
          defaultMode: 420
          name: thanos-config
        name: thanos-config
      - configMap:
          defaultMode: 420
          name: thanos-query-config
        name: thanos-query-config
      - configMap:
          defaultMode: 420
          name: prometheus-rules
        name: prometheus-rules
      - configMap:
          defaultMode: 420
          name: thanoss3config
          items: 
          - key: s3config
            path: s3.yaml
        name: s3cfgcm
      - hostPath:
          path: /etc/localtime
        name: localtime
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: thanos-rule-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: csi-rbd-sc
      volumeMode: Filesystem

---
#apiVersion: v1
#data:
#  alertmanager.rules.yaml: |
#    groups:
#    - name: alertmanager.rules
#      rules:
#      - alert: test
#        expr: count(up) < 1000
#        for: 1m
#        labels:
#          namespace: "{{$labels.namespace}}"
#          attr: "{{$labels.instance}}"
#        annotations:
#          description: "up instance < 1000"
#kind: ConfigMap
#metadata:
#  name: prometheus-rules
#  namespace: monitoring
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: thanos-compact-data
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  storageClassName: csi-rbd-sc
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-compact
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 10902
    targetPort: 10902
  selector:
    name: thanos-compact
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-compact
  namespace: monitoring
  labels:
    name: thanos-compact
spec:
  replicas: 1
  selector:
    matchLabels:
      name: thanos-compact
  template:
    metadata:
      labels:
        name: thanos-compact
    spec:
      containers:
      - name: thanos-compact
        image: harbor.zhianoa.com/app/thanos:v0.23.1
        imagePullPolicy: IfNotPresent
        args:
        - compact
        - --wait
        - --data-dir=/var/lib/compact
        - --http-address=0.0.0.0:10902
        - --objstore.config-file=/etc/thanos/s3.yaml
        - --http.config=/etc/thanos/thanos.yaml
        - --retention.resolution-raw=180d
        - --retention.resolution-5m=180d
        - --retention.resolution-1h=360d
        livenessProbe:
          httpGet:
            port: 10902
            path: /-/healthy
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46MjFvcHMuY29tb3Bzb3Bzb3Bz
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            port: 10902
            path: /-/ready
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46MjFvcHMuY29tb3Bzb3Bzb3Bz
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
        - mountPath: /etc/thanos/thanos.yaml
          name: thanos-config
          subPath: thanos.yaml
        - name: s3cfgcm
          subPath: s3.yaml
          mountPath: /etc/thanos/s3.yaml
        - name: thanos-compact-data
          mountPath: /var/lib/compact
      volumes:
      - configMap:
          defaultMode: 420
          name: thanos-config
        name: thanos-config
      - configMap:
          defaultMode: 420
          name: thanoss3config
          items:
          - key: s3config
            path: s3.yaml
        name: s3cfgcm
      - hostPath:
          path: /etc/localtime
        name: localtime
      - name: thanos-compact-data
        persistentVolumeClaim:
          claimName: thanos-compact-data
